import org.gradle.internal.os.OperatingSystem

plugins {
	id 'java-library'
}

switch ( OperatingSystem.current() ) {
	case OperatingSystem.WINDOWS:
		project.ext.lwjglNatives = "natives-windows"
		break
	case OperatingSystem.LINUX:
		project.ext.lwjglNatives = "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = "natives-macos"
		break
}

if (project.hasProperty('javaModule')) {
	javaModule.name = 'org.sheepy.vulkan'
}

project.ext.lwjglVersion = "3.2.0"
project.ext.jomlVersion = "1.9.10"
project.ext.emfVersion = "2.15.0"

dependencies {

	api project(':org.sheepy.common')

	api "org.eclipse.emf:org.eclipse.emf.ecore:${emfVersion}"
	api "org.eclipse.emf:org.eclipse.emf.common:${emfVersion}"

	api "org.joml:joml:${jomlVersion}"

	api "org.lwjgl:lwjgl:$lwjglVersion"
	api "org.lwjgl:lwjgl-glfw:$lwjglVersion"
	api "org.lwjgl:lwjgl-stb:$lwjglVersion"
	api "org.lwjgl:lwjgl-vulkan:$lwjglVersion"

	implementation "org.lwjgl:lwjgl:$lwjglVersion:$lwjglNatives"
	implementation "org.lwjgl:lwjgl-glfw:$lwjglVersion:$lwjglNatives"
	implementation "org.lwjgl:lwjgl-stb:$lwjglVersion:$lwjglNatives"

	api 'org.junit.jupiter:junit-jupiter-api:5.1.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
}

test {
    useJUnitPlatform()
}

sourceSets {
	main {
		java.srcDirs = ['src/generated/java',
			'src/main/java']
		resources.srcDirs = ['res/']
	}
}
