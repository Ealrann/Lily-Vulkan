<?xml version="1.0" encoding="UTF-8"?>
<graphic:Subpass xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:application="org.sheepy.lily.core.model.application" xmlns:graphic="org.sheepy.lily.vulkan.model.process.graphic" xmlns:graphicpipeline="org.sheepy.vulkan.model.graphicpipeline" xmlns:nuklear="org.sheepy.lily.vulkan.extra.model.nuklear" xmlns:process="org.sheepy.lily.vulkan.model.process" xmlns:resource="org.sheepy.lily.vulkan.model.resource" name="Nuklear">
  <attachmantRefPkg/>
  <stages>COLOR_ATTACHMENT_OUTPUT_BIT</stages>
  <accesses>COLOR_ATTACHMENT_READ_BIT</accesses>
  <accesses>COLOR_ATTACHMENT_WRITE_BIT</accesses>
  <pipelinePkg>
    <pipelines xsi:type="graphic:GraphicsPipeline" name="GUI no images" shaders="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3 //@pipelinePkg/@pipelines.0/@resourcePkg/@resources.4">
      <resourcePkg>
        <resources xsi:type="resource:SampledImage" name="NullTexture">
          <sampler/>
          <image xsi:type="resource:StaticImage" name="NullImage" size="1;1">
            <usages>Sampled</usages>
            <usages>TransferDst</usages>
            <initialLayout stage="FRAGMENT_SHADER_BIT">
              <accessMask>SHADER_READ_BIT</accessMask>
            </initialLayout>
          </image>
        </resources>
        <resources xsi:type="nuklear:NuklearFont" fontArrayDescriptor="//@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.2"/>
        <resources xsi:type="nuklear:NuklearContext" font="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.1" nullTexture="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.0" layoutTask="//@pipelinePkg/@pipelines.0/@taskPkg/@tasks.1" imageArrayDescriptor="//@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.4"/>
        <resources xsi:type="resource:Shader" name="NkVertex">
          <file xsi:type="application:StringModuleResource" name="Vertex" path="ui.vert.spv" moduleName="org.sheepy.lily.vulkan.extra.nuklear"/>
        </resources>
        <resources xsi:type="resource:Shader" name="NkFrag" stage="FRAGMENT_BIT">
          <file xsi:type="application:StringModuleResource" name="Frag" path="ui_with_images.frag.spv" moduleName="org.sheepy.lily.vulkan.extra.nuklear"/>
          <constants name="FontTextureCount" size="4"/>
        </resources>
        <resources xsi:type="resource:TransferBuffer" name="NkPushBuffer" size="524288" instanceCount="2"/>
        <resources xsi:type="resource:CompositeBuffer" name="NuklearVertexBuffer" transferBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.5">
          <dataProviders xsi:type="nuklear:NuklearVertexProvider" usage="VERTEX_BUFFER_BIT" context="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.2"/>
          <dataProviders xsi:type="nuklear:NuklearIndexProvider" usage="INDEX_BUFFER_BIT" context="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.2"/>
        </resources>
        <resources xsi:type="resource:Sampler" name="FontSampler"/>
      </resourcePkg>
      <descriptorPkg>
        <descriptors xsi:type="resource:SampledImageDescriptor" name="NullTexture" type="COMBINED_IMAGE_SAMPLER" sampledImage="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.0">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="resource:SamplerDescriptor" name="FontSampler" sampler="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.7">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="resource:ImageArrayDescriptor" name="Font" type="SAMPLED_IMAGE" initialLayout="SHADER_READ_ONLY_OPTIMAL">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="resource:SamplerDescriptor" name="ImageSampler" sampler="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.7">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="resource:ImageArrayDescriptor" name="ImageArray" type="SAMPLED_IMAGE" initialLayout="SHADER_READ_ONLY_OPTIMAL">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
      </descriptorPkg>
      <pushConstantRanges size="68">
        <stages>VERTEX_BIT</stages>
        <stages>FRAGMENT_BIT</stages>
      </pushConstantRanges>
      <descriptorSetPkg>
        <descriptorSets name="UI" descriptors="//@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.0 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.1 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.2 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.3 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.4"/>
      </descriptorSetPkg>
      <taskPkg>
        <tasks xsi:type="process:BindDescriptorSets" descriptorSets="//@pipelinePkg/@pipelines.0/@descriptorSetPkg/@descriptorSets.0"/>
        <tasks xsi:type="nuklear:NuklearLayoutTask" context="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.2"/>
        <tasks xsi:type="process:PrepareCompositeTransfer" compositeBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.6" prepareDuringUpdate="true">
          <parts/>
          <parts part="1"/>
        </tasks>
        <tasks xsi:type="nuklear:NuklearFillBufferTask" context="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.2" drawTask="//@pipelinePkg/@pipelines.0/@taskPkg/@tasks.5" vertexBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.6" layoutTask="//@pipelinePkg/@pipelines.0/@taskPkg/@tasks.1"/>
        <tasks xsi:type="process:FlushTransferBufferTask" transferBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.5"/>
        <tasks xsi:type="process:CompositeTask" name="Nk draw"/>
      </taskPkg>
      <viewportState xsi:type="graphicpipeline:DynamicViewportState" viewportCount="1" scissorCount="1"/>
      <inputAssembly/>
      <rasterizer cullMode="NONE" frontFace="COUNTER_CLOCKWISE"/>
      <colorBlend>
        <attachments blendEnable="true" srcColor="SRC_ALPHA" dstColor="ONE_MINUS_SRC_ALPHA"/>
      </colorBlend>
      <dynamicState>
        <states>VIEWPORT</states>
        <states>SCISSOR</states>
      </dynamicState>
      <vertexInputState>
        <inputDescriptor strideLength="20">
          <attributes name="Position" format="R32G32_SFLOAT"/>
          <attributes name="UV" format="R32G32_SFLOAT" offset="8"/>
          <attributes name="Color" format="R8G8B8A8_UNORM" offset="16"/>
        </inputDescriptor>
      </vertexInputState>
    </pipelines>
  </pipelinePkg>
</graphic:Subpass>
