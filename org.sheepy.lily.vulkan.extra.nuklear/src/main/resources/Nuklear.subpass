<?xml version="1.0" encoding="UTF-8"?>
<graphic:Subpass xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:graphic="org.sheepy.lily.vulkan.model.process.graphic" xmlns:graphicpipeline="org.sheepy.vulkan.model.graphicpipeline" xmlns:nuklear="org.sheepy.lily.vulkan.extra.model.nuklear" xmlns:process="org.sheepy.lily.vulkan.model.process" xmlns:resource="org.sheepy.lily.core.model.resource" xmlns:vulkanresource="org.sheepy.lily.vulkan.model.resource" name="Nuklear" waitForStage="COLOR_ATTACHMENT_OUTPUT_BIT" syncStage="COLOR_ATTACHMENT_OUTPUT_BIT" finishStage="COLOR_ATTACHMENT_OUTPUT_BIT">
  <resourcePkg/>
  <attachmentRefPkg/>
  <pipelinePkg>
    <pipelines xsi:type="graphic:GraphicsPipeline" name="GUI" specializationData="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.10" layout="//@pipelinePkg/@pipelines.0/@descriptorPool/@descriptorSets.0" shaders="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.1 //@pipelinePkg/@pipelines.0/@resourcePkg/@resources.2">
      <resourcePkg>
        <resources xsi:type="vulkanresource:TransferBuffer" name="" size="4000000"/>
        <resources xsi:type="vulkanresource:Shader" name="NkVertex">
          <file xsi:type="resource:StringModuleResource" name="Vertex" path="ui.vert.spv" moduleName="org.sheepy.lily.vulkan.extra.nuklear"/>
        </resources>
        <resources xsi:type="vulkanresource:Shader" name="NkFrag" stage="FRAGMENT_BIT">
          <file xsi:type="resource:StringModuleResource" name="Frag" path="ui.frag.spv" moduleName="org.sheepy.lily.vulkan.extra.nuklear"/>
        </resources>
        <resources xsi:type="vulkanresource:MemoryChunk" name="NuklearVertexBuffer" transferBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.0">
          <parts xsi:type="vulkanresource:BufferMemory">
            <buffers xsi:type="vulkanresource:BufferViewer" name="NkVertex">
              <usages>VERTEX_BUFFER_BIT</usages>
              <usages>TRANSFER_DST_BIT</usages>
              <dataProvider xsi:type="nuklear:NuklearVertexProvider"/>
            </buffers>
            <buffers xsi:type="vulkanresource:BufferViewer" name="NkIndex">
              <usages>INDEX_BUFFER_BIT</usages>
              <usages>TRANSFER_DST_BIT</usages>
              <dataProvider xsi:type="nuklear:NuklearIndexProvider"/>
            </buffers>
          </parts>
          <parts xsi:type="vulkanresource:ImageViewer" name="FontImage" format="R8_UNORM">
            <usages>Sampled</usages>
            <usages>TransferDst</usages>
            <dataProvider xsi:type="nuklear:FontImageProvider"/>
          </parts>
        </resources>
        <resources xsi:type="vulkanresource:Sampler" name="FontSampler"/>
        <resources xsi:type="vulkanresource:MemoryChunk" name="Static Resources">
          <parts xsi:type="vulkanresource:StaticImage" name="NullImage" size="1;1">
            <usages>Sampled</usages>
            <usages>TransferDst</usages>
          </parts>
        </resources>
        <resources xsi:type="vulkanresource:Sampler" name="NullTextureSampler"/>
        <resources xsi:type="nuklear:NuklearFont" fontImage="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.1/@dataProvider"/>
        <resources xsi:type="nuklear:NuklearContext" font="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.7" nullTexture="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.5/@parts.0" vertexDataProvider="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.0/@buffers.0/@dataProvider" indexDataProvider="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.0/@buffers.1/@dataProvider" vertexMemoryChunk="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3" compositeDrawTask="//@pipelinePkg/@pipelines.0/@taskPkgs.1/@tasks.1"/>
        <resources xsi:type="vulkanresource:Sampler" name="ImageSampler"/>
        <resources xsi:type="vulkanresource:ConstantBuffer" name="SpecializationData"/>
      </resourcePkg>
      <descriptorPkg>
        <descriptors xsi:type="vulkanresource:ImageDescriptor" name="NullTexture" type="COMBINED_IMAGE_SAMPLER" images="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.5/@parts.0" sampler="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.6" layout="SHADER_READ_ONLY_OPTIMAL">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="vulkanresource:ImageDescriptor" name="FontSampler" sampler="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.4">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="vulkanresource:ImageDescriptor" name="ImageSampler" sampler="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.9">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
        <descriptors xsi:type="vulkanresource:ImageDescriptor" name="ImageArrayDescriptor" type="SAMPLED_IMAGE" images="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.1" layout="SHADER_READ_ONLY_OPTIMAL">
          <shaderStages>FRAGMENT_BIT</shaderStages>
        </descriptors>
      </descriptorPkg>
      <taskPkgs stage="PreRender">
        <tasks xsi:type="process:FlushTransferBufferTask" transferBuffer="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.0"/>
        <tasks xsi:type="process:PipelineBarrier" srcStage="TRANSFER_BIT" dstStage="VERTEX_INPUT_BIT">
          <barriers xsi:type="vulkanresource:BufferBarrier" name="Index">
            <srcAccessMask>TRANSFER_WRITE_BIT</srcAccessMask>
            <dstAccessMask>INDEX_READ_BIT</dstAccessMask>
            <buffers buffers="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.0/@buffers.1"/>
          </barriers>
          <barriers xsi:type="vulkanresource:BufferBarrier" name="Vertex">
            <srcAccessMask>TRANSFER_WRITE_BIT</srcAccessMask>
            <dstAccessMask>VERTEX_ATTRIBUTE_READ_BIT</dstAccessMask>
            <buffers buffers="//@pipelinePkg/@pipelines.0/@resourcePkg/@resources.3/@parts.0/@buffers.0"/>
          </barriers>
        </tasks>
      </taskPkgs>
      <taskPkgs>
        <tasks xsi:type="process:BindDescriptorSets" descriptorSets="//@pipelinePkg/@pipelines.0/@descriptorPool/@descriptorSets.0"/>
        <tasks xsi:type="process:CompositeTask" name="Nk draw"/>
      </taskPkgs>
      <descriptorPool>
        <descriptorSets name="UI" descriptors="//@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.0 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.1 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.2 //@pipelinePkg/@pipelines.0/@descriptorPkg/@descriptors.3"/>
      </descriptorPool>
      <pushConstantRanges size="68">
        <stages>VERTEX_BIT</stages>
        <stages>FRAGMENT_BIT</stages>
      </pushConstantRanges>
      <viewportState xsi:type="graphicpipeline:DynamicViewportState" viewportCount="1" scissorCount="1"/>
      <inputAssembly/>
      <rasterizer cullMode="NONE" frontFace="COUNTER_CLOCKWISE"/>
      <colorBlend>
        <attachments blendEnable="true" srcColor="SRC_ALPHA" dstColor="ONE_MINUS_SRC_ALPHA"/>
      </colorBlend>
      <dynamicState>
        <states>VIEWPORT</states>
        <states>SCISSOR</states>
      </dynamicState>
      <vertexInputState>
        <inputDescriptor strideLength="20">
          <attributes name="Position" format="R32G32_SFLOAT"/>
          <attributes name="UV" format="R32G32_SFLOAT" offset="8"/>
          <attributes name="Color" format="R8G8B8A8_UNORM" offset="16"/>
        </inputDescriptor>
      </vertexInputState>
    </pipelines>
  </pipelinePkg>
  <waitForAccesses>COLOR_ATTACHMENT_WRITE_BIT</waitForAccesses>
  <syncAccesses>COLOR_ATTACHMENT_WRITE_BIT</syncAccesses>
  <finishAccesses>COLOR_ATTACHMENT_WRITE_BIT</finishAccesses>
</graphic:Subpass>
