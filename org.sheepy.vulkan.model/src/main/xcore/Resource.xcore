@GenModel(modelDirectory="/org.sheepy.vulkan.model/src/generated/resource")
@GenModel(publicConstructors="true")
@GenModel(updateClasspath="false")

package org.sheepy.vulkan.model.resource

import org.sheepy.vulkan.model.enumeration.EShaderStage
import org.sheepy.vulkan.model.enumeration.EPipelineStage

import java.lang.Module
import org.sheepy.vulkan.model.enumeration.EImageLayout

interface Resource
{
}

interface VulkanBuffer extends Resource
{
}

class Buffer extends VulkanBuffer
{
	long size
	int usage
	int properties
}

interface ResourceContainer
{
	contains Resource[] resources
}

interface SizedBuffer extends VulkanBuffer
{
}

abstract class Image extends SizedBuffer
{
}

class Texture extends VulkanBuffer, IDescriptor
{
	contains PathResource file
	boolean mipmapEnabled = "false"
}

class DepthImage extends VulkanBuffer
{
}

abstract class PathResource extends Resource
{
	String path
}

class FileResource extends PathResource
{
}

class ModuleResource extends PathResource
{
	JavaModule module
}

type JavaModule wraps Module

class Shader extends Resource
{
	contains PathResource file
	EShaderStage stage
}

class PushConstant extends VulkanBuffer
{
	int size
	EPipelineStage stage
}

interface IDescriptor
{
}

interface DescriptorSet
{	
}

class BasicDescriptorSet extends DescriptorSet
{
	refers IDescriptor[1..*] descriptors
}

abstract class IndexedBuffer extends VulkanBuffer, IDescriptor
{
}


abstract class Barrier
{
	EPipelineStage srcStage
	EPipelineStage dstStage
}

class BufferBarrier extends Barrier
{
	refers Buffer buffer
	int srcAccess
	int dstAccess
}

abstract class AbstractImageBarrier extends Barrier
{
	contains ImageTransition[] transitions
}

class ImageBarrier extends AbstractImageBarrier
{
	refers Image image
}

class ReferenceImageBarrier extends AbstractImageBarrier
{
	long imageId
	int mipLevels
	int imageFormat
}

class ImageTransition
{
	EImageLayout srcLayout
	EImageLayout dstLayout
	int srcAccess
	int dstAccess
}

