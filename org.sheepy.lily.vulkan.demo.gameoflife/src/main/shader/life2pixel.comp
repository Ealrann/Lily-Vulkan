#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WHITE vec4(1.0, 1.0, 1.0, 1.0)
#define RED vec4(1.0, 0.0, 0.0, 1.0)
#define BLACK vec4(0.0, 0.0, 0.0, 1.0)

#define WIDTH 800
#define HEIGHT 600

#define WORKGROUP_SIDE 8

const int WIDTH_IN_TILE = WIDTH / WORKGROUP_SIDE;
const int TILE_SIZE = WORKGROUP_SIDE * WORKGROUP_SIDE;

layout (local_size_x = WORKGROUP_SIDE, local_size_y = WORKGROUP_SIDE, local_size_z = 1) in;

layout(binding = 0) readonly buffer buf1 {
   int boardData[];
} inArray;

layout(rgba8, binding = 1) uniform image2D outImage;

uint globalIndexFromLocal();

void main() {

  if(gl_GlobalInvocationID.x >= WIDTH || gl_GlobalInvocationID.y >= HEIGHT)
  	return;

  vec4 value;

  // store the target color into a storage buffer:
  if(inArray.boardData[globalIndexFromLocal()] == 1) {
  	value = WHITE;
  }  else {
    value = BLACK;
  }

  imageStore(outImage, ivec2(gl_GlobalInvocationID.xy), value);
}

uint globalIndexFromLocal()
{
  return (gl_WorkGroupID.x + gl_WorkGroupID.y * WIDTH_IN_TILE) * TILE_SIZE + gl_LocalInvocationIndex;
}
